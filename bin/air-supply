#!/usr/bin/env node

// Depends on the CJS version in dist
const jsonStringify = require('json5/lib/stringify');
const yargs = require('yargs');
const { AirSupply } = require('../dist/air-supply.js');
const pkg = require('../package.json');

// Yarg interface
let argv = yargs
  .usage(
    '\nThe air-supply command line runs Air Supply based on a configuration file.  By default it will look up the directory tree until it finds a valid config file.  Outputs the data to the console.\n\nUsage: $0 [options]'
  )
  .version(pkg.version)
  .example('$0 -c air-supply.config.json', 'Use a specific configuration file.')
  .alias('j', 'json5')
  .describe('j', 'Output as JSON5')
  .alias('c', 'config')
  .describe('c', 'Load a specific config file')
  .help('h')
  .alias('h', 'help').argv;

// Run air supply
async function getSupply() {
  try {
    let a = new AirSupply({
      config: argv.c
    });
    let data = await a.supply();

    process.stdout.write(argv.j ? jsonStringify(data) : JSON.stringify(data));
    process.stdout.write('\n');
  } catch (e) {
    console.error('Error running Air Supply.\n');
    console.error(e);
  }
}

getSupply();
